// <auto-generated />
using System;
using FBQ.Salud_AccessData.Commands;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FBQ.Salud_AccessData.Migrations
{
    [DbContext(typeof(FbqSaludDbContext))]
    partial class FbqSaludDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FBQ.Salud_Domain.Entities.Diagnostico", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Emfermedad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("Diagnostico");

                    b.HasData(
                        new
                        {
                            Codigo = "AR.1",
                            Emfermedad = "ARTRITIS GRADO 1"
                        },
                        new
                        {
                            Codigo = "AR.2",
                            Emfermedad = "ARTRITIS GRADO 2"
                        },
                        new
                        {
                            Codigo = "QE.1",
                            Emfermedad = "QUEBRADURA EXPUESTA GRADO 1"
                        },
                        new
                        {
                            Codigo = "QE.2",
                            Emfermedad = "QUEBRADURA EXPUESTA GRADO 2"
                        },
                        new
                        {
                            Codigo = "FI.1",
                            Emfermedad = "FIEBRE"
                        },
                        new
                        {
                            Codigo = "CO.1",
                            Emfermedad = "COVID19"
                        },
                        new
                        {
                            Codigo = "GR.1",
                            Emfermedad = "GRIPE A"
                        });
                });

            modelBuilder.Entity("FBQ.Salud_Domain.Entities.HistoriaClinica", b =>
                {
                    b.Property<int>("HistoriaClinicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoriaClinicaId"), 1L, 1);

                    b.Property<string>("Diagnostico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaApertura")
                        .HasColumnType("datetime2");

                    b.Property<string>("Medicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<string>("Recomendacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HistoriaClinicaId");

                    b.HasIndex("PacienteId");

                    b.ToTable("HistoriasClinicas");
                });

            modelBuilder.Entity("FBQ.Salud_Domain.Entities.Paciente", b =>
                {
                    b.Property<int>("PacienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PacienteId"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirecionNumero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PacienteId");

                    b.ToTable("Pacientes");

                    b.HasData(
                        new
                        {
                            PacienteId = 1,
                            Apellido = "esteves",
                            DNI = "41395213",
                            Direccion = "calle tremenda",
                            DirecionNumero = "5333",
                            Edad = 25,
                            Estado = false,
                            Foto = "foto.jpg",
                            Nombre = "leonardo",
                            Sexo = "Masculino",
                            Telefono = "112561245"
                        },
                        new
                        {
                            PacienteId = 2,
                            Apellido = "muñoz",
                            DNI = "41395211",
                            Direccion = "calle abismal",
                            DirecionNumero = "5323",
                            Edad = 25,
                            Estado = false,
                            Foto = "foto.jpg",
                            Nombre = "brisa",
                            Sexo = "Femenino",
                            Telefono = "112561241"
                        });
                });

            modelBuilder.Entity("FBQ.Salud_Domain.Entities.Turno", b =>
                {
                    b.Property<int>("TurnoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TurnoId"), 1L, 1);

                    b.Property<string>("DiagnosticoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("EstadoTurno")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaTurno")
                        .HasColumnType("datetime2");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.HasKey("TurnoId");

                    b.HasIndex("DiagnosticoId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Turnos");

                    b.HasData(
                        new
                        {
                            TurnoId = 1,
                            DiagnosticoId = "AR.1",
                            EstadoTurno = false,
                            FechaTurno = new DateTime(2024, 12, 7, 20, 59, 4, 990, DateTimeKind.Local).AddTicks(2823),
                            MedicoId = 1,
                            Observacion = "gripe",
                            PacienteId = 1
                        },
                        new
                        {
                            TurnoId = 2,
                            DiagnosticoId = "AR.1",
                            EstadoTurno = false,
                            FechaTurno = new DateTime(2024, 12, 7, 20, 59, 4, 990, DateTimeKind.Local).AddTicks(2833),
                            MedicoId = 2,
                            Observacion = "gripe",
                            PacienteId = 2
                        });
                });

            modelBuilder.Entity("FBQ.Salud_Domain.Entities.HistoriaClinica", b =>
                {
                    b.HasOne("FBQ.Salud_Domain.Entities.Paciente", "Paciente")
                        .WithMany("HistoriaClinicas")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("FBQ.Salud_Domain.Entities.Turno", b =>
                {
                    b.HasOne("FBQ.Salud_Domain.Entities.Diagnostico", "Diagnostico")
                        .WithMany("Turnos")
                        .HasForeignKey("DiagnosticoId");

                    b.HasOne("FBQ.Salud_Domain.Entities.Paciente", "Paciente")
                        .WithMany("Turnos")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diagnostico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("FBQ.Salud_Domain.Entities.Diagnostico", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("FBQ.Salud_Domain.Entities.Paciente", b =>
                {
                    b.Navigation("HistoriaClinicas");

                    b.Navigation("Turnos");
                });
#pragma warning restore 612, 618
        }
    }
}
